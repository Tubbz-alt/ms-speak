# ----------------------------------------------------
# This file is generated by the Qt Visual Studio Tools.
# ------------------------------------------------------
#
#  pie is required to be disabled in order to make the file look executable to
#  nautilus, The behavior is occurring because newer ubuntu distros set GCC default link
#  flag -pie, which marks e_type as ET_DYN on the binary file. Consequently, the Operating System
#  recognizes as Shared Library.
#QMAKE_LFLAGS += -no-pie

TEMPLATE = app
TARGET = MultiSpeaker
DESTDIR = ../run
QT += core xml network gui widgets #xmlpatterns
CONFIG += debug
DEFINES += QT_DLL QT_NETWORK_LIB QT_WIDGETS_LIB QT_XML_LIB _MS_ #WIN64
#QMAKE_CXXFLAGS += -Wzero-as-null-pointer-constant
INCLUDEPATH += \
    . \
	../Valid8or \

DEPENDPATH += .
MOC_DIR += GeneratedFiles
OBJECTS_DIR += obj
UI_DIR += GeneratedFiles
RCC_DIR += GeneratedFiles

HEADERS += \
    AnimatedLineItem.h \
    CertInfoDlg.h \
    DigitalClock.h \
    DockTitleBar.h \
    FunctionBlockDock.h \
    FunctionBlockDockTitleBar.h \
    FunctionBlockListView.h \
    FunctionGroupWidget.h \
    HeaderContainerWidget.h \
    HeaderWidget.h \
    Host.h \
    HostEditor.h \
    HostItem.h \
    HostMethodListWidget.h \
    HostScene.h \
    HostView.h \
    HttpHeader.h \
    HttpOutEditor.h \
    LogDock.h \
    MethodDock.h \
    MiniNetEditor.h \
    MultiSpeaker.h \
    NamespaceInfo.h \
    scTextEdit.h \
    Settings.h \
    SslErrorDlg.h \
    TimelineEvent.h \
    TimelineEventEditor.h \
    TimelineEventItem.h \
    TimelineEventSendWorker.h \
    TimelineHeaderWidget.h \
    TimelineScene.h \
    TimelineView.h \
    Timer.h \
    TitleHeaderWidget.h \
    Utils.h \
    Version.h \
    WebServiceInfo.h \
    WidgetContainer.h \
    WsdlDock.h \
    WsdlFile.h \
    WsdlFileView.h \
    WsdlMethodTemplateEditor.h \
    WsdlMethodView.h \
    WsdlTreeViewHeaderWidget.h \
    WsdlXmlViewHeaderWidget.h \
	../Valid8or/Valid8.h \
    ../Valid8or/Process.h \
    ../Valid8or/ProgressWidget.h \
    ../Valid8or/Valid8Worker.h \
    ../Valid8or/QSL.h \
    ../Valid8or/Status.h

SOURCES += \
    AnimatedLineItem.cpp \
    CertInfoDlg.cpp \
    DigitalClock.cpp \
    DockTitleBar.cpp \
    FunctionBlockDock.cpp \
    FunctionBlockDockTitleBar.cpp \
    FunctionBlockListView.cpp \
    FunctionGroupWidget.cpp \
    HeaderContainerWidget.cpp \
    HeaderWidget.cpp \
    Host.cpp \
    HostEditor.cpp \
    HostItem.cpp \
    HostMethodListWidget.cpp \
    HostScene.cpp \
    HostView.cpp \
    HttpHeader.cpp \
    HttpOutEditor.cpp \
    LogDock.cpp \
    main.cpp \
    MiniNetEditor.cpp \
    MethodDock.cpp \
    MultiSpeaker.cpp \
    scTextEdit.cpp \
    SslErrorDlg.cpp \
    TimelineEvent.cpp \
    TimelineEventEditor.cpp \
    TimelineEventItem.cpp \
    TimelineEventSendWorker.cpp \
    TimelineHeaderWidget.cpp \
    TimelineScene.cpp \
    TimelineView.cpp \
    TitleHeaderWidget.cpp \
    Utils.cpp \
    WebServiceInfo.cpp \
    WidgetContainer.cpp \
    WsdlDock.cpp \
    WsdlFile.cpp \
    WsdlFileView.cpp \
    WsdlMethodTemplateEditor.cpp \
    WsdlMethodView.cpp \
    WsdlTreeViewHeaderWidget.cpp \
    WsdlXmlViewHeaderWidget.cpp \
	../Valid8or/Valid8.cpp \
    ../Valid8or/Process.cpp \
    ../Valid8or/ProgressWidget.cpp \
    ../Valid8or/Valid8Worker.cpp

FORMS += \
    CertInfoDlg.ui \
    DockTitleBar.ui \
    FunctionBlockDockTitleBar.ui \
    FunctionGroupWidget.ui \
    HeaderContainerWidget.ui \
    HeaderWidget.ui \
    HostEditor.ui \
    HostMethodListWidget.ui \
    HttpOutEditor.ui \
    LogDock.ui \
    MultiSpeaker.ui \
    MiniNetEditor.ui \
    SslErrorDlg.ui \
    TimelineEventEditor.ui \
    TimelineHeaderWidget.ui \
    TitleHeaderWidget.ui \
    WsdlFileView.ui \
    WsdlMethodTemplateEditor.ui \
    WsdlMethodView.ui \
    WsdlTreeViewHeaderWidget.ui \
    WsdlXmlViewHeaderWidget.ui \
    ../Valid8or/Valid8.ui \
    ../Valid8or/ProgressWidget.ui

RESOURCES += MultiSpeaker.qrc

#message("DESTDIR is : " $$DESTDIR)
#message("OBJECTS_DIR is : " $$OBJECTS_DIR)

# you can do something like this:
# debug {
#     LIBS += -L./libfolder -lmydebuglib.lib
# }
#
# release {
#     LIBS += -L./libfolder -lmyreleaselib.lib
# }
#
#
# Variables can be used to store the contents of environment variables.
# These can be evaluated at the time that qmake is run, or included in
# the generated Makefile for evaluation when the project is built.
#
# To obtain the contents of an environment value when qmakeis run, use
# the $$(...) operator.
#
# To obtain the contents of an environment value at the time when the
# generated Makefile is processed, use the $(...) operator.
#
# $$PWD which refers to the folder that contains your .pro file
#  It seems the INCLUDEPATH specified is relative to the build directory,
#  not relative to the directory with the .pro as one might easily assume.
#
# The official qmake page says:
# The PWD variable specifies the full path leading to the directory containing
# the current file being parsed. This can be useful to refer to files within the
# source tree when writing project files to support shadow builds.
#
# _PRO_FILE_
#   This variable contains the path to the project file in use.
# _PRO_FILE_PWD_
#   This variable contains the path to the directory containing the
#   project file in use.
#
#  For example, the following line causes the location of the project
#  file to be written to the console:
#
# message("_PRO_FILE_ is :" $$_PRO_FILE_)
#
# $${...}
# allows you to append the contents of the variable to another value
# without separating the two with a space.
